import numpy as np
import scipy.stats as stats

# 1) Известно, что генеральная совокупность распределена нормально со средним квадратическим отклонением,
# равным 16. Найти доверительный интервал для оценки математического ожидания a с надежностью 0.95,
# если выборочная средняя M = 80, а объем выборки n = 256.
# [78.0306894301508, 81.9693105698492]

interval = [80 - stats.t.ppf(0.975, 255) * 16 / 256 ** 0.5, 80 + stats.t.ppf(0.975, 255) * 16 / 256 ** 0.5]

# 2) В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью,
# получены опытные данные:
# 6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
# Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей,
# оценить истинное значение величины X при помощи доверительного интервала, покрывающего это значение
# с доверительной вероятностью 0,95.
# [6.267515851415713, 6.912484148584288]

part = np.array([6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1])
interval = [np.mean(part) - stats.t.ppf(0.975, 9) * np.sqrt(np.var(part, ddof=1) / 10),
            np.mean(part) + stats.t.ppf(0.975, 9) * (np.var(part, ddof=1) / 10) ** 0.5]

# 3)Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170
# Рост матерей  178, 165, 165, 173, 168, 155, 160, 164, 178, 175
# Используя эти данные построить 95% доверительный интервал для разности среднего роста родителей и детей.
# [-6.268418034506846, 10.068418034506857]

mother = np.array([178, 165, 165, 173, 168, 155, 160, 164, 178, 175])
daughter = np.array([175, 167, 154, 174, 178, 148, 160, 167, 169, 170])
delta = np.mean(mother) - np.mean(daughter)
D1 = np.var(mother, ddof=1)
D2 = np.var(daughter, ddof=1)
D = (D1 + D2) / 2
se = (D / 10 +D / 10) ** 0.5
interval = [delta - stats.t.ppf(0.975, 18) * se, delta + stats.t.ppf(0.975, 18) * se]

print(interval)
